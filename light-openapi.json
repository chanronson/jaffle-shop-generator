{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Light API",
    "version" : "1.0.0"
  },
  "security" : [ {
    "apiKeyAuth" : [ ]
  }, {
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/oauth/token" : {
      "post" : {
        "tags" : [ "Oauth" ],
        "summary" : "Create access token",
        "description" : "Exchanges an authorization code or refresh token for an access token",
        "operationId" : "getOAuthToken",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "client_id" : {
                    "type" : "string"
                  },
                  "client_secret" : {
                    "type" : "string"
                  },
                  "grant_type" : {
                    "type" : "string"
                  },
                  "code" : {
                    "type" : "string"
                  },
                  "redirect_uri" : {
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalOauthToken"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/authorize" : {
      "get" : {
        "tags" : [ "Oauth" ],
        "summary" : "Start authorization flow",
        "description" : "Redirects the user to the authorization page to start the OAuth V2 authorization flow",
        "operationId" : "startOAuthAuthorizationFlow",
        "parameters" : [ {
          "name" : "redirect_uri",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "client_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/v1/accounting-documents/accounting-documents" : {
      "get" : {
        "tags" : [ "v1 - Accounting Documents" ],
        "summary" : "List accounting documents",
        "description" : "Returns a paginated list of accounting documents",
        "operationId" : "listAccountingDocuments",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPaginatedResponseV1ModelExternalAccountingDocumentWithAmountV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/attachments" : {
      "get" : {
        "tags" : [ "v1 - Attachments" ],
        "summary" : "List attachments",
        "description" : "Returns a list of attachments associated with a specific resource",
        "operationId" : "getAttachments",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExternalAttachmentV1Model"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1 - Attachments" ],
        "summary" : "Create attachment",
        "description" : "Creates a new attachment record",
        "operationId" : "createAttachment",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreateAttachmentRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalAttachmentV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/attachments/upload-url" : {
      "post" : {
        "tags" : [ "v1 - Attachments" ],
        "summary" : "Generate attachment upload URL",
        "description" : "Generates a secure upload URL for attachment files",
        "operationId" : "createAttachmentUploadUrl",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUploadAttachmentRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalAttachmentUploadUrlResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/attachments/{attachmentId}" : {
      "delete" : {
        "tags" : [ "v1 - Attachments" ],
        "summary" : "Delete attachment",
        "description" : "Deletes a specific attachment and its associated file",
        "operationId" : "deleteAttachment",
        "parameters" : [ {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/v1/attachments/{attachmentId}/document" : {
      "get" : {
        "tags" : [ "v1 - Attachments" ],
        "summary" : "Get attachment document",
        "description" : "Returns the document file for a specific attachment",
        "operationId" : "getAttachmentDocument",
        "parameters" : [ {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "v1 - Attachments" ],
        "summary" : "Get attachment options",
        "description" : "Handles CORS preflight requests for attachment document access",
        "operationId" : "getAttachmentDocumentOptions",
        "parameters" : [ {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LightPrincipal"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/v1/bff/invoice-payables" : {
      "get" : {
        "tags" : [ "v1 - Invoice Payables" ],
        "summary" : "List invoice payables",
        "description" : "Returns a paginated list of invoice payables",
        "operationId" : "listInvoicePayables",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "REIMBURSEMENT" ]
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalBffInvoicePayablesResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-customers/public-key" : {
      "get" : {
        "tags" : [ "v1 - Card Customers" ],
        "summary" : "Get card integration public key",
        "description" : "Returns the public key for the cards integration service",
        "operationId" : "getPublicKey",
        "parameters" : [ {
          "name" : "companyEntityId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCardPublicKeyInfoV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-transactions/batch-update" : {
      "patch" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Batch update card transactions",
        "description" : "Updates multiple card transactions in a single operation",
        "operationId" : "batchUpdateCardTransactions",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalBatchUpdateCardTransactionRequestV1Model"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/v1/card-transactions/{cardTransactionId}/receipt-upload-url" : {
      "post" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Generate receipt upload URL",
        "description" : "Generates a secure upload URL for receipt documents",
        "operationId" : "generateUploadUrlForCardTransaction",
        "parameters" : [ {
          "name" : "cardTransactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalTransactionReceiptUploadUrlRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCardTransactionReceiptUploadUrlResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-transactions/{cardTransactionId}" : {
      "get" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Get card transaction",
        "description" : "Returns a card transaction by ID",
        "operationId" : "getCardTransaction",
        "parameters" : [ {
          "name" : "cardTransactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalBffCardTransactionV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-transactions/{transactionId}/receipt" : {
      "get" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Get transaction receipt",
        "description" : "Returns the attached receipt document for a card transaction",
        "operationId" : "getAttachedCardTransactionReceiptDocument",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Remove transaction receipt",
        "description" : "Removes the attached receipt document from a card transaction",
        "operationId" : "removeReceipt",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "v1 - Card Transactions" ],
        "operationId" : "getCardTransactionReceiptOptions",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LightPrincipal"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/v1/card-transactions" : {
      "get" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "List card transactions",
        "description" : "Returns a paginated list of card transactions",
        "operationId" : "listCardTransactions",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "onlyPostable",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "missingData",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalBffCardTransactionV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-transactions/{transactionId}/post" : {
      "post" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Post card transaction",
        "description" : "Posts a card transaction to the ledger",
        "operationId" : "postCardTransaction",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCardTransactionV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-transactions/{transactionId}" : {
      "patch" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Update card transaction",
        "description" : "Updates an existing card transaction",
        "operationId" : "updateCardTransaction",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpdateCardTransactionRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCardTransactionV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-transactions/{transactionId}/lines/{transactionLineId}" : {
      "patch" : {
        "tags" : [ "v1 - Card Transactions" ],
        "summary" : "Update card transaction line",
        "description" : "Updates a specific card transaction line item",
        "operationId" : "updateCardTransactionLine",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "transactionLineId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpdateCardTransactionLineRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCardTransactionLineV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cards/{cardId}/freeze" : {
      "post" : {
        "tags" : [ "v1 - Cards" ],
        "summary" : "Freeze card",
        "description" : "Freezes a card to block transactions",
        "operationId" : "freezeCard",
        "parameters" : [ {
          "name" : "X-Idempotency-Key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCardV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cards/{cardId}" : {
      "get" : {
        "tags" : [ "v1 - Cards" ],
        "summary" : "Get card",
        "description" : "Returns a card by ID",
        "operationId" : "getCard",
        "parameters" : [ {
          "name" : "cardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalBffCardV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cards" : {
      "get" : {
        "tags" : [ "v1 - Cards" ],
        "summary" : "List cards",
        "description" : "Returns a paginated list of cards",
        "operationId" : "listCards",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalBffCardV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cards/{cardId}/reveal" : {
      "post" : {
        "tags" : [ "v1 - Cards" ],
        "summary" : "Reveal card data",
        "description" : "Retrieves and decrypts sensitive card information",
        "operationId" : "revealCard",
        "parameters" : [ {
          "name" : "cardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalRevealCardRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalEncryptedCardDataV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cards/{cardId}/unfreeze" : {
      "post" : {
        "tags" : [ "v1 - Cards" ],
        "summary" : "Unfreeze card",
        "description" : "Unfreezes a card to allow transactions",
        "operationId" : "unfreezeCard",
        "parameters" : [ {
          "name" : "X-Idempotency-Key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCardV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/entities" : {
      "get" : {
        "tags" : [ "v1 - Entities" ],
        "summary" : "List company entities",
        "description" : "Returns a paginated list of company entities",
        "operationId" : "getCompanyEntities",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeCardCustomer",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalCompanyEntityV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/current" : {
      "get" : {
        "tags" : [ "v1 - Companies" ],
        "summary" : "Get current company",
        "description" : "Returns the current company information",
        "operationId" : "getCurrentCompany",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCompanyV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/credit-notes/{creditNoteId}/document" : {
      "get" : {
        "tags" : [ "v1 - Credit Notes" ],
        "summary" : "Get credit note document",
        "description" : "Returns the attached PDF document for a credit note",
        "operationId" : "getAttachedDocument",
        "parameters" : [ {
          "name" : "creditNoteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/v1/credit-notes" : {
      "get" : {
        "tags" : [ "v1 - Credit Notes" ],
        "summary" : "List credit notes",
        "description" : "Returns a paginated list of credit notes",
        "operationId" : "listCreditNotes",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalCreditNoteV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/custom-properties/groups/{groupId}" : {
      "get" : {
        "tags" : [ "v1 - Custom Properties" ],
        "summary" : "Get custom property group",
        "description" : "Returns a custom property group by ID",
        "operationId" : "getCustomPropertyGroupById",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCustomPropertyGroupV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/custom-properties/groups" : {
      "get" : {
        "tags" : [ "v1 - Custom Properties" ],
        "summary" : "List custom property groups",
        "description" : "Returns a paginated list of custom property groups",
        "operationId" : "listPaginatedCustomPropertyGroups",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeValues",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalCustomPropertyGroupV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/custom-properties/groups/{groupId}/values/{valueId}" : {
      "get" : {
        "tags" : [ "v1 - Custom Properties" ],
        "summary" : "Get custom property value",
        "description" : "Returns a custom property value by ID",
        "operationId" : "getCustomPropertyValueById",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "valueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCustomPropertyValueV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/custom-properties/groups/{groupId}/values" : {
      "get" : {
        "tags" : [ "v1 - Custom Properties" ],
        "summary" : "List custom property values",
        "description" : "Returns a paginated list of custom property values",
        "operationId" : "listPaginatedCustomPropertyValues",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalCustomPropertyValueV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/{customerId}" : {
      "get" : {
        "tags" : [ "v1 - Customers" ],
        "summary" : "Get customer",
        "description" : "Returns a customer by ID",
        "operationId" : "getCustomerById",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalCustomerV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers" : {
      "get" : {
        "tags" : [ "v1 - Customers" ],
        "summary" : "List customers",
        "description" : "Returns a paginated list of customers",
        "operationId" : "listCustomers",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalCustomerV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/expenses/{expenseId}/cancel" : {
      "post" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Cancel expense",
        "description" : "Cancels an existing expense",
        "operationId" : "cancelExpense",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalExpenseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/expenses/{expenseId}/line-items" : {
      "post" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Create line item",
        "description" : "Creates a new line item",
        "operationId" : "createExpenseLineItem",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateExpenseLineItemRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalExpenseLineItemV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/expenses/{expenseId}/line-items/{lineItemId}" : {
      "delete" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Delete line item",
        "description" : "Deletes an existing line item",
        "operationId" : "deleteExpenseLineItem",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "lineItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Update line item",
        "description" : "Updates an existing expense line item",
        "operationId" : "updateExpenseLineItem",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "lineItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateExpenseLineItemRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalExpenseLineItemV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/expenses/upload-url" : {
      "post" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Create upload URL",
        "description" : "Creates a pre-signed URL for uploading an expense receipt document",
        "operationId" : "generateUploadUrl",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalExpenseReceiptUploadUrlRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalExpenseReceiptUploadUrlResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/expenses/{expenseId}" : {
      "get" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Get expense",
        "description" : "Returns an expense by ID including all line items",
        "operationId" : "getExpense",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalExpenseV1Model"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Update expense",
        "description" : "Updates an existing expense",
        "operationId" : "updateExpense",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpdateExpenseRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalExpenseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/expenses/{expenseId}/document" : {
      "get" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Get expense document",
        "description" : "Returns the attached receipt document as a PDF download",
        "operationId" : "getAttachedDocument_1",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/v1/expenses" : {
      "get" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "List expenses",
        "description" : "Returns a paginated list of expenses",
        "operationId" : "listExpenses",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetExternalExpensesResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/expenses/submit" : {
      "post" : {
        "tags" : [ "v1 - Expenses" ],
        "summary" : "Submit reimbursement",
        "description" : "Submits all pending expenses from the current user for administrator review and approval",
        "operationId" : "submitReimbursement",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/v1/invoice-approval" : {
      "get" : {
        "tags" : [ "v1 - Invoice Approvals" ],
        "summary" : "Get invoice approvals",
        "description" : "Returns approval records for specified invoice payables",
        "operationId" : "getInvoicePayableApprovals",
        "parameters" : [ {
          "name" : "invoicePayableId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LightPrincipal"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExternalInvoiceApprovalV1Model"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice-payables/{invoicePayableId}/approve" : {
      "post" : {
        "tags" : [ "v1 - Invoice Payables" ],
        "summary" : "Approve invoice payable",
        "description" : "Approves an invoice payable for payment processing",
        "operationId" : "approveInvoicePayable",
        "parameters" : [ {
          "name" : "invoicePayableId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalApproveInvoicePayableRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalInvoicePayableV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice-payables" : {
      "post" : {
        "tags" : [ "v1 - Invoice Payables" ],
        "summary" : "Create invoice payable",
        "description" : "Creates a new invoice payable document",
        "operationId" : "createInvoicePayableDetails",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreateInvoicePayableRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalInvoicePayableV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice-payables/{invoicePayableId}/document/upload-url" : {
      "post" : {
        "tags" : [ "v1 - Invoice Payables" ],
        "summary" : "Generate document upload URL",
        "description" : "Generates a secure upload URL for invoice payable documents",
        "operationId" : "createInvoicePayableDocumentUploadUrl",
        "parameters" : [ {
          "name" : "invoicePayableId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUploadInvoicePayableDocumentRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalInvoicePayableUploadUrlResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice-payables/{invoicePayableId}/decline" : {
      "post" : {
        "tags" : [ "v1 - Invoice Payables" ],
        "summary" : "Decline invoice payable",
        "description" : "Declines an invoice payable",
        "operationId" : "declineInvoicePayable",
        "parameters" : [ {
          "name" : "invoicePayableId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalDeclineInvoicePayableRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalInvoicePayableV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice-payables/{invoicePayableId}" : {
      "get" : {
        "tags" : [ "v1 - Invoice Payables" ],
        "summary" : "Get invoice payable",
        "description" : "Returns a specific invoice payable by ID",
        "operationId" : "getInvoicePayableDetails",
        "parameters" : [ {
          "name" : "invoicePayableId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalInvoicePayableV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice-payables/{invoicePayableId}/document" : {
      "get" : {
        "tags" : [ "v1 - Invoice Payables" ],
        "summary" : "Get invoice document",
        "description" : "Returns the attached document for an invoice payable",
        "operationId" : "getInvoicePayableDocument",
        "parameters" : [ {
          "name" : "invoicePayableId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "documentType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "ORIGINAL", "GENERATED" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/v1/invoice-receivables" : {
      "post" : {
        "tags" : [ "v1 - Invoice Receivables" ],
        "summary" : "Create sales invoice",
        "description" : "Creates a new sales invoice",
        "operationId" : "createInvoice",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreateInvoiceReceivableRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalInvoiceReceivableV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoice-receivables/{invoiceReceivableId}/lines" : {
      "post" : {
        "tags" : [ "v1 - Invoice Receivables" ],
        "summary" : "Create invoice line",
        "description" : "Creates a new invoice line item",
        "operationId" : "createInvoiceLine",
        "parameters" : [ {
          "name" : "invoiceReceivableId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreateInvoiceReceivableLineRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalInvoiceReceivableLineV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/journal-entries" : {
      "post" : {
        "tags" : [ "v1 - Journal Entry Accounting Documents" ],
        "summary" : "Create journal entry",
        "description" : "Creates a new journal entry",
        "operationId" : "createJournalEntry",
        "parameters" : [ {
          "name" : "X-Idempotency-Key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreateJournalEntryRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalJournalEntryV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/lci/command" : {
      "post" : {
        "tags" : [ "v1 - LCI" ],
        "summary" : "Run LCI command",
        "description" : "Executes a user command through the Light Command Interface (LCI)",
        "operationId" : "runCommand",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalLciCommandRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      }
    },
    "/v1/ledger-accounts" : {
      "get" : {
        "tags" : [ "v1 - Ledger accounts" ],
        "summary" : "List ledger accounts",
        "description" : "Returns a paginated list of ledger accounts",
        "operationId" : "getLedgerAccounts",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ledgerFeature",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "CARD_TRANSACTIONS", "INVOICE_PAYABLES", "INVOICE_RECEIVABLES", "JOURNAL_ENTRIES", "PURCHASE_ORDERS", "REIMBURSEMENTS" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalLedgerAccountV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ledger-transaction-lines" : {
      "get" : {
        "tags" : [ "v1 - Ledger Transactions" ],
        "summary" : "List ledger transaction lines",
        "description" : "Returns a paginated list of ledger transaction lines",
        "operationId" : "listLedgerTransactionLines",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "includeCustomProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeMaxLineAmount",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetLedgerTransactionLinesWithMaxAmountResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}/lines/bulk" : {
      "put" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Batch update purchase order lines",
        "description" : "Updates multiple purchase order line items",
        "operationId" : "batchUpdatePurchaseOrderLines",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalBatchUpdatePurchaseOrderLineRequestV1Model"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExternalPurchaseOrderLineV1Model"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Bulk create purchase order lines",
        "description" : "Creates multiple purchase order line items",
        "operationId" : "bulkCreatePurchaseOrderLines",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExternalCreatePurchaseOrderLineRequestV1Model"
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExternalPurchaseOrderLineV1Model"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}/cancel" : {
      "post" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Cancel purchase order",
        "description" : "Cancels a purchase order",
        "operationId" : "cancelPurchaseOrder",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}/close" : {
      "post" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Close purchase order",
        "description" : "Closes a purchase order",
        "operationId" : "closePurchaseOrder",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders" : {
      "get" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "List purchase orders",
        "description" : "Returns a paginated list of purchase orders",
        "operationId" : "listPurchaseOrders",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalGetAllResponseV1ModelExternalBffPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Create purchase order",
        "description" : "Creates a new purchase order",
        "operationId" : "createPurchaseOrder",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreatePurchaseOrderRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}/lines" : {
      "post" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Create purchase order line",
        "description" : "Creates a new purchase order line item",
        "operationId" : "createPurchaseOrderLine",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreatePurchaseOrderLineRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderLineV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}" : {
      "get" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Get purchase order",
        "description" : "Returns a purchase order by ID",
        "operationId" : "getPurchaseOrder",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Update purchase order",
        "description" : "Updates an existing purchase order",
        "operationId" : "updatePurchaseOrder",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpdatePurchaseOrderRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}/lock" : {
      "post" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Lock purchase order",
        "description" : "Locks a purchase order to prevent modifications",
        "operationId" : "locksPurchaseOrder",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}/lines/{lineId}" : {
      "delete" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Delete purchase order line",
        "description" : "Deletes a purchase order line item",
        "operationId" : "deletePurchaseOrderLine",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "lineId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Update purchase order line",
        "description" : "Updates a purchase order line item",
        "operationId" : "updatePurchaseOrderLine",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "lineId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpdatePurchaseOrderLineRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderLineV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchase-orders/{purchaseOrderId}/reset" : {
      "post" : {
        "tags" : [ "v1 - Purchase Orders" ],
        "summary" : "Reset purchase order",
        "description" : "Resets a purchase order to its initial state",
        "operationId" : "resetPurchaseOrder",
        "parameters" : [ {
          "name" : "purchaseOrderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalPurchaseOrderV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users" : {
      "get" : {
        "tags" : [ "v1 - Users" ],
        "summary" : "List users",
        "description" : "Returns a paginated list of users",
        "operationId" : "listUsers",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "includeRoles",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeGroups",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetExternalUsersResponseV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{userId}/reimbursements/latest" : {
      "get" : {
        "tags" : [ "v1 - Users" ],
        "summary" : "Get latest reimbursement",
        "description" : "Returns the most recent reimbursement for a user",
        "operationId" : "getLatestReimbursement",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalReimbursementV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{userId}/reimbursement-config" : {
      "get" : {
        "tags" : [ "v1 - Users" ],
        "summary" : "Get reimbursement config",
        "description" : "Returns the reimbursement configuration for a user",
        "operationId" : "getUserReimbursementConfig",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalUserReimbursementConfigV1Model"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1 - Users" ],
        "summary" : "Update reimbursement config",
        "description" : "Creates or updates the reimbursement configuration for a user",
        "operationId" : "upsertUserReimbursementConfig",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpsertUserReimbursementConfigRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalUserReimbursementConfigV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{userId}" : {
      "patch" : {
        "tags" : [ "v1 - Users" ],
        "summary" : "Update user",
        "description" : "Updates the given user",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpdateUserRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalUserV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vendors" : {
      "get" : {
        "tags" : [ "v1 - Vendors" ],
        "summary" : "List vendors",
        "description" : "Returns a paginated list of vendors",
        "operationId" : "listVendors",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "amount:desc,createdAt:asc"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "state:in:IN_DRAFT|SCHEDULED|PAID,amount:gte:500"
          }
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetExternalVendorsResponseV1Model"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1 - Vendors" ],
        "summary" : "Create vendor",
        "description" : "Creates a new vendor",
        "operationId" : "createVendor",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalCreateVendorRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalVendorV1Model"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vendors/{vendorId}" : {
      "get" : {
        "tags" : [ "v1 - Vendors" ],
        "summary" : "Get vendor",
        "description" : "Returns a vendor by ID",
        "operationId" : "getVendor",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalVendorV1Model"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1 - Vendors" ],
        "summary" : "Update vendor",
        "description" : "Updates an existing vendor",
        "operationId" : "updateVendor",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalUpdateVendorRequestV1Model"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalVendorV1Model"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ExternalOauthToken" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer",
            "format" : "int64"
          },
          "token_type" : {
            "type" : "string"
          },
          "refresh_token" : {
            "type" : "string"
          }
        }
      },
      "DirectedAmount" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dcSign" : {
            "type" : "string",
            "enum" : [ "D", "C" ]
          }
        }
      },
      "ExternalAccountingDocumentWithAmountV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentSequenceId" : {
            "type" : "string"
          },
          "documentNumber" : {
            "type" : "string"
          },
          "documentType" : {
            "type" : "string",
            "enum" : [ "AP", "AR", "BP", "CC", "CN", "CT", "DE", "FX", "JE", "YC" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "POSTED", "PARTIALLY_CLEARED", "CLEARED", "ARCHIVED" ]
          },
          "description" : {
            "type" : "string"
          },
          "documentDate" : {
            "type" : "string",
            "format" : "date"
          },
          "areLinesWithTax" : {
            "type" : "boolean"
          },
          "businessPartnerName" : {
            "type" : "string"
          },
          "businessPartnerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "totalTransactionAmountInMajors" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          }
        }
      },
      "ExternalPaginatedResponseV1ModelExternalAccountingDocumentWithAmountV1Model" : {
        "type" : "object",
        "properties" : {
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalAccountingDocumentWithAmountV1Model"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "nextCursor" : {
            "type" : "string"
          },
          "prevCursor" : {
            "type" : "string"
          }
        }
      },
      "ExternalAttachmentArMetadataV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalAttachmentMetadataV1Model"
        }, {
          "type" : "object",
          "properties" : {
            "shouldAttachToEmail" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "ExternalAttachmentMetadataV1Model" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "AR" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ExternalAttachmentV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "resourceId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentKey" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ExternalAttachmentMetadataV1Model"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalCreateAttachmentRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentKey" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ExternalAttachmentMetadataV1Model"
          }
        }
      },
      "ExternalAttachmentUploadUrlResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "uploadUrl" : {
            "type" : "string",
            "format" : "url"
          },
          "key" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ExternalUploadAttachmentRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "resourceId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fileName" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          }
        }
      },
      "LightPrincipal" : {
        "type" : "object",
        "properties" : {
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ClientException" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "BAD_REQUEST", "CONFLICT", "FORBIDDEN", "NOT_FOUND", "UNAUTHORIZED", "UNPROCESSABLE_CONTENT" ]
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClientExceptionError"
            }
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "classLoaderName" : {
                  "type" : "string"
                },
                "moduleName" : {
                  "type" : "string"
                },
                "moduleVersion" : {
                  "type" : "string"
                },
                "methodName" : {
                  "type" : "string"
                },
                "fileName" : {
                  "type" : "string"
                },
                "lineNumber" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "nativeMethod" : {
                  "type" : "boolean"
                },
                "className" : {
                  "type" : "string"
                }
              }
            }
          },
          "message" : {
            "type" : "string"
          },
          "suppressed" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "stackTrace" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "classLoaderName" : {
                        "type" : "string"
                      },
                      "moduleName" : {
                        "type" : "string"
                      },
                      "moduleVersion" : {
                        "type" : "string"
                      },
                      "methodName" : {
                        "type" : "string"
                      },
                      "fileName" : {
                        "type" : "string"
                      },
                      "lineNumber" : {
                        "type" : "integer",
                        "format" : "int32"
                      },
                      "nativeMethod" : {
                        "type" : "boolean"
                      },
                      "className" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "message" : {
                  "type" : "string"
                },
                "localizedMessage" : {
                  "type" : "string"
                }
              }
            }
          },
          "localizedMessage" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ClientExceptionError" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "clientMessage" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "path" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "ExternalBffInvoicePayableUserDetailsV1Model" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userFirstName" : {
            "type" : "string"
          },
          "userLastName" : {
            "type" : "string"
          },
          "userAvatarUrl" : {
            "type" : "string"
          }
        }
      },
      "ExternalBffInvoicePayableV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "REIMBURSEMENT", "VENDOR_INVOICE" ]
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ExternalInvoicePayableMetadataV1Model"
          },
          "documentKey" : {
            "type" : "string"
          },
          "documentName" : {
            "type" : "string"
          },
          "senderEmail" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "failureReason" : {
            "type" : "string",
            "enum" : [ "EMAIL_NOT_ALLOWED", "ERP_ENTRY_FAILED", "OCR_FAILED", "PAYMENT_APPROVAL_DECLINED", "PAYMENT_FAILED", "RESETTING_INVOICE_FAILED", "APPROVAL_SUBMISSION_FAILED", "USER_INPUT_VALIDATION_FAILED", "DUPLICATE_INVOICE", "PAYMENT_REJECTED" ]
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "INIT", "CREATED", "IN_DRAFT", "APPROVAL_REQUESTED", "APPROVAL_PENDING", "APPROVED_ACCOUNTING_ENTRY_PENDING", "DECLINED", "READY_FOR_PAYMENT_RELEASE", "PENDING_PAYMENT_APPROVAL", "PAYMENT_PAUSED", "SCHEDULED", "PAYMENT_PENDING", "PARTIALLY_PAID", "PAID", "COMPLETED", "RESET_PENDING", "CANCELLATION_PENDING", "CANCELLED", "DUPLICATED" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvalNote" : {
            "type" : "string"
          },
          "payeeName" : {
            "type" : "string"
          },
          "payeeIban" : {
            "type" : "string"
          },
          "payeeBban" : {
            "type" : "string"
          },
          "payeeBic" : {
            "type" : "string"
          },
          "payeeBankCode" : {
            "type" : "string"
          },
          "payeeCountry" : {
            "type" : "string"
          },
          "payeeAddress" : {
            "type" : "string"
          },
          "payeeZipcode" : {
            "type" : "string"
          },
          "payeeBankName" : {
            "type" : "string"
          },
          "payeeBankCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "payeeBankAddress" : {
            "type" : "string"
          },
          "payeeBankZipcode" : {
            "type" : "string"
          },
          "payeeCity" : {
            "type" : "string"
          },
          "payeeBankCity" : {
            "type" : "string"
          },
          "fiNumber" : {
            "type" : "string"
          },
          "invoiceNumber" : {
            "type" : "string"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityName" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "issuedDate" : {
            "type" : "string",
            "format" : "date"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "paymentAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ocrCompletedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canceledAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "senderBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cancellationReason" : {
            "type" : "string"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/ExternalBffInvoicePayableVendorDetailsV1Model"
          },
          "user" : {
            "$ref" : "#/components/schemas/ExternalBffInvoicePayableUserDetailsV1Model"
          },
          "nextApprover" : {
            "$ref" : "#/components/schemas/ExternalNextApproverV1Model"
          },
          "reimbursement" : {
            "$ref" : "#/components/schemas/ExternalReimbursementV1Model"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "paymentPausedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "paymentPausedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalBffInvoicePayableVendorDetailsV1Model" : {
        "type" : "object",
        "properties" : {
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vatId" : {
            "type" : "string"
          },
          "vendorAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorTaxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorCostCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorSenderBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorIdentifier" : {
            "type" : "string"
          },
          "vendorName" : {
            "type" : "string"
          },
          "vendorAvatarUrl" : {
            "type" : "string"
          },
          "vendorEmail" : {
            "type" : "string"
          },
          "vendorWebsite" : {
            "type" : "string"
          },
          "vendorCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "vendorCity" : {
            "type" : "string"
          },
          "vendorAddress" : {
            "type" : "string"
          },
          "vendorZipcode" : {
            "type" : "string"
          },
          "vendorCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "vendorContractValue" : {
            "type" : "integer",
            "format" : "int64"
          },
          "vendorCreatedBy" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalBffInvoicePayablesResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBffInvoicePayableV1Model"
            }
          }
        }
      },
      "ExternalInvoicePayableMetadataV1Model" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "VENDOR_INVOICE_METADATA", "REIMBURSEMENT_METADATA" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ExternalNextApproverV1Model" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "notificationChannel" : {
            "type" : "string",
            "enum" : [ "MS_TEAMS", "SLACK", "WEB_APP" ]
          },
          "approvalSentAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalReimbursementInvoicePayableMetadataV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalInvoicePayableMetadataV1Model"
        }, {
          "type" : "object",
          "properties" : {
            "reimbursementId" : {
              "type" : "string",
              "format" : "uuid"
            },
            "userId" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        } ]
      },
      "ExternalReimbursementV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "expenseIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "SUCCEEDED", "FAILED", "REJECTED", "RESET" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalVendorInvoicePayableMetadataV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalInvoicePayableMetadataV1Model"
        } ]
      },
      "ExternalCardPublicKeyInfoV1Model" : {
        "type" : "object",
        "properties" : {
          "publicKey" : {
            "type" : "string"
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "ExternalBatchUpdateCardTransactionLineRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "lineId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SetCustomPropertyRequestV1Model"
            }
          },
          "description" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalBatchUpdateCardTransactionRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "cardTransactionId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SetCustomPropertyRequestV1Model"
            }
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBatchUpdateCardTransactionLineRequestV1Model"
            }
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "SetCustomPropertyRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "valueIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "inlineValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ExternalCardTransactionReceiptUploadUrlResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "uploadUrl" : {
            "type" : "string",
            "format" : "url"
          },
          "key" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ExternalTransactionReceiptUploadUrlRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "filename" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          }
        }
      },
      "ExternalBffCardTransactionLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "transactionId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountLabel" : {
            "type" : "string"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeLabel" : {
            "type" : "string"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterName" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "netAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalBffCardTransactionV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityName" : {
            "type" : "string"
          },
          "cardBalanceAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardBalanceAccountLabel" : {
            "type" : "string"
          },
          "cardId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardVendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardVendorAvatarUrl" : {
            "type" : "string"
          },
          "cardVendorName" : {
            "type" : "string"
          },
          "cardOwnerName" : {
            "type" : "string"
          },
          "cardOwnerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardLastFour" : {
            "type" : "string"
          },
          "originalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "originalCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "DEBIT", "CREDIT" ]
          },
          "transactionReason" : {
            "type" : "string",
            "enum" : [ "APPROVED", "INSUFFICIENT_FUNDS", "OTHER" ]
          },
          "purchaseType" : {
            "type" : "string",
            "enum" : [ "ATM", "BALANCE_INQUIRY", "ECOMMERCE", "POS", "RECURRING", "UNKNOWN", "OTHER" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "AUTHORIZED", "DECLINED", "CAPTURED", "REFUNDED", "VOIDED", "POSTED" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PAYMENT", "REFUND", "OTHER" ]
          },
          "merchant" : {
            "$ref" : "#/components/schemas/ExternalCardTransactionMerchantV1Model"
          },
          "receiptDocumentKey" : {
            "type" : "string"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBffCardTransactionLineV1Model"
            }
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "description" : {
            "type" : "string"
          },
          "performedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "exportedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalCardTransactionMerchantV1Model" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "cleanName" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "zipcode" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "mcc" : {
            "type" : "string"
          },
          "acquirerId" : {
            "type" : "string"
          },
          "logoUrl" : {
            "type" : "string"
          }
        }
      },
      "ExternalCustomPropertyV1Model" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "groupInternalName" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyValueV1Model"
            }
          }
        }
      },
      "ExternalCustomPropertyValueV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "groupId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "groupInternalName" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "internalName" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "context" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalBffCardTransactionV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBffCardTransactionV1Model"
            }
          }
        }
      },
      "ExternalCardTransactionLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "transactionId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "netAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "taxAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalCardTransactionV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardBalanceAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "originalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "originalCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "DEBIT", "CREDIT" ]
          },
          "transactionReason" : {
            "type" : "string",
            "enum" : [ "APPROVED", "INSUFFICIENT_FUNDS", "OTHER" ]
          },
          "purchaseType" : {
            "type" : "string",
            "enum" : [ "ATM", "BALANCE_INQUIRY", "ECOMMERCE", "POS", "RECURRING", "UNKNOWN", "OTHER" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "AUTHORIZED", "DECLINED", "CAPTURED", "REFUNDED", "VOIDED", "POSTED" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PAYMENT", "REFUND", "OTHER" ]
          },
          "merchant" : {
            "$ref" : "#/components/schemas/ExternalCardTransactionMerchantV1Model"
          },
          "receiptDocumentKey" : {
            "type" : "string"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCardTransactionLineV1Model"
            }
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "editStatus" : {
            "type" : "string",
            "enum" : [ "ALL_EDITS_ALLOWED", "LINE_AMOUNT_EDITS_LOCKED", "ALL_EDITS_LOCKED" ]
          },
          "description" : {
            "type" : "string"
          },
          "performedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalSetCustomPropertyRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "valueIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "inlineValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ExternalUpdateCardTransactionRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalSetCustomPropertyRequestV1Model"
            }
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ExternalUpdateCardTransactionLineRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalSetCustomPropertyRequestV1Model"
            }
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ExternalCard3DsMetadataV1Model" : {
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "password" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "ExternalCardLimitV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "interval" : {
            "type" : "string",
            "enum" : [ "PER_TRANSACTION", "WEEKLY", "MONTHLY" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalCardMetadataV1Model" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "VENDOR", "EMPLOYEE" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ExternalCardV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardBalanceAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "form" : {
            "type" : "string",
            "enum" : [ "VIRTUAL" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "FROZEN", "CLOSED", "UPDATE_IN_PROGRESS" ]
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ExternalCardMetadataV1Model"
          },
          "threeDs" : {
            "$ref" : "#/components/schemas/ExternalCard3DsMetadataV1Model"
          },
          "description" : {
            "type" : "string"
          },
          "bin" : {
            "type" : "string"
          },
          "lastFour" : {
            "type" : "string"
          },
          "cardholderName" : {
            "type" : "string"
          },
          "limits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCardLimitV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "VENDOR", "EMPLOYEE" ]
          }
        }
      },
      "ExternalEmployeeCardMetadataV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalCardMetadataV1Model"
        } ]
      },
      "ExternalVendorCardMetadataV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalCardMetadataV1Model"
        }, {
          "type" : "object",
          "properties" : {
            "vendorId" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        } ]
      },
      "PhoneNumber" : {
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "localNumber" : {
            "type" : "string"
          }
        }
      },
      "ExternalBffCardV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityName" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownerName" : {
            "type" : "string"
          },
          "cardBalanceAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardBalanceAccountLabel" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "form" : {
            "type" : "string",
            "enum" : [ "VIRTUAL" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "FROZEN", "CLOSED", "UPDATE_IN_PROGRESS" ]
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ExternalCardMetadataV1Model"
          },
          "threeDs" : {
            "$ref" : "#/components/schemas/ExternalCard3DsMetadataV1Model"
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorName" : {
            "type" : "string"
          },
          "vendorAvatarUrl" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "bin" : {
            "type" : "string"
          },
          "lastFour" : {
            "type" : "string"
          },
          "cardholderName" : {
            "type" : "string"
          },
          "limitIntervalSpend" : {
            "type" : "integer",
            "format" : "int64"
          },
          "limits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCardLimitV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "VENDOR", "EMPLOYEE" ]
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalBffCardV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBffCardV1Model"
            }
          }
        }
      },
      "ExternalEncryptedCardDataV1Model" : {
        "type" : "object",
        "properties" : {
          "encryptedData" : {
            "type" : "string"
          }
        }
      },
      "ExternalRevealCardRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "encryptedKey" : {
            "type" : "string"
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "street2" : {
            "type" : "string"
          }
        }
      },
      "ExternalCompanyEntityV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "code" : {
            "type" : "string"
          },
          "parentCompanyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "localCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "displayName" : {
            "type" : "string"
          },
          "vatNumber" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "HIDDEN", "INACTIVE" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalCompanyEntityV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCompanyEntityV1Model"
            }
          }
        }
      },
      "ExternalCompanyV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "invoiceEmail" : {
            "type" : "string"
          },
          "receiptEmail" : {
            "type" : "string"
          },
          "contractEmail" : {
            "type" : "string"
          },
          "logoUrl" : {
            "type" : "string"
          },
          "baseCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalCreditNoteLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "creditNoteId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "grossTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "netTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "description" : {
            "type" : "string"
          },
          "ledgerTaxId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "ledgerAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalCreditNoteV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "businessPartnerName" : {
            "type" : "string"
          },
          "businessPartnerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "POSTED", "PARTIALLY_CLEARED", "CLEARED", "ARCHIVED" ]
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "postingDate" : {
            "type" : "string",
            "format" : "date"
          },
          "documentDate" : {
            "type" : "string",
            "format" : "date"
          },
          "valuationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "areLinesWithTax" : {
            "type" : "boolean"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCreditNoteLineV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "senderEmail" : {
            "type" : "string"
          },
          "documentName" : {
            "type" : "string"
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalCreditNoteV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCreditNoteV1Model"
            }
          }
        }
      },
      "ExternalCustomPropertyGroupV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "label" : {
            "type" : "string"
          },
          "internalName" : {
            "type" : "string"
          },
          "inputType" : {
            "type" : "string",
            "enum" : [ "SINGLE_SELECT", "MULTI_SELECT", "NUMERIC", "TEXT", "BOOLEAN", "DATE" ]
          },
          "objectLevel" : {
            "type" : "string",
            "enum" : [ "HEADER", "LINE" ]
          },
          "objectTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "BILL", "CARD_TRANSACTION", "CREDIT_NOTE", "CONTRACT", "CUSTOMER", "CUSTOMER_CREDIT", "INVOICE", "JOURNAL_ENTRY", "PRODUCT", "PURCHASE_ORDER", "REIMBURSEMENT", "VENDOR" ]
            }
          },
          "objectTypeStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "enum" : [ "ACTIVE", "DELETED" ]
            }
          },
          "context" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyValueV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "required" : {
            "type" : "boolean"
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalCustomPropertyGroupV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyGroupV1Model"
            }
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalCustomPropertyValueV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyValueV1Model"
            }
          }
        }
      },
      "ExternalCustomerV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED" ]
          },
          "description" : {
            "type" : "string"
          },
          "vatNumber" : {
            "type" : "string"
          },
          "businessRegistrationNumber" : {
            "type" : "string"
          },
          "easCode" : {
            "type" : "string"
          },
          "einvoiceAddress" : {
            "type" : "string"
          },
          "einvoiceNetwork" : {
            "type" : "string",
            "enum" : [ "NEMHANDEL", "PEPPOL" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BUSINESS", "CONSUMER", "GOVERNMENT" ]
          },
          "logoUrl" : {
            "type" : "string"
          },
          "domain" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "externalSource" : {
            "type" : "string",
            "enum" : [ "HUBSPOT", "SALESFORCE" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalCustomerV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomerV1Model"
            }
          }
        }
      },
      "ExternalExpenseLineItemV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "expenseId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "originalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "billingAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "reimbursementCategoryId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalExpenseV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "receiptDocumentKey" : {
            "type" : "string"
          },
          "originalCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "billingCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "CREATED", "IN_DRAFT", "SUBMITTED_FOR_REVIEW", "CANCELLED" ]
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "performedDate" : {
            "type" : "string",
            "format" : "date"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalExpenseLineItemV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CreateExpenseLineItemRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "originalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "billingAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "reimbursementCategoryId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalExpenseReceiptUploadUrlResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "uploadUrl" : {
            "type" : "string",
            "format" : "url"
          },
          "key" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ExternalExpenseReceiptUploadUrlRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "filename" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          }
        }
      },
      "GetExternalExpensesResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "billingAmountTotal" : {
            "type" : "integer",
            "format" : "int64"
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalExpenseV1Model"
            }
          }
        }
      },
      "ExternalUpdateExpenseRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "originalCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "performedDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "UpdateExpenseLineItemRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "originalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "billingAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "reimbursementCategoryId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalInvoiceApprovalV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoicePayableId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceDocumentKey" : {
            "type" : "string"
          },
          "invoiceNumber" : {
            "type" : "string"
          },
          "invoiceAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "invoiceCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "invoiceIssuedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "invoiceIssuedDate" : {
            "type" : "string",
            "format" : "date"
          },
          "invoiceDueAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "invoiceDueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "userApprovals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalInvoiceUserApprovalV1Model"
            }
          },
          "note" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "APPROVED", "DECLINED", "CANCELLED", "FAILED", "IN_PROGRESS" ]
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalInvoiceUserApprovalV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "approvalId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "APPROVED", "DECLINED", "FAILED", "IN_REVIEW", "PENDING" ]
          },
          "channel" : {
            "type" : "string",
            "enum" : [ "SLACK", "MS_TEAMS", "WEB_APP" ]
          },
          "note" : {
            "type" : "string"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "notifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalAiValueSuggestionV1Model" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "fieldValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "reasoning" : {
            "type" : "string"
          }
        }
      },
      "ExternalCustomPropertiesObjectValuesV1Model" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ExternalPropertyObjectValueV1Model"
            }
          }
        }
      },
      "ExternalInvoicePayableLineItemMetadataV1Model" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "REIMBURSEMENT", "VENDOR_INVOICE" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ExternalInvoicePayableLineItemV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoicePayableId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "REIMBURSEMENT", "VENDOR_INVOICE" ]
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ExternalInvoicePayableLineItemMetadataV1Model"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "netAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "shouldAmortize" : {
            "type" : "boolean"
          },
          "amortizationStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "amortizationEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "amortizationScheduleId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amortizationTemplateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "customPropertiesOld" : {
            "$ref" : "#/components/schemas/ExternalCustomPropertiesObjectValuesV1Model"
          },
          "aiValueSuggestions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalAiValueSuggestionV1Model"
            }
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalInvoicePayableV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "REIMBURSEMENT", "VENDOR_INVOICE" ]
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ExternalInvoicePayableMetadataV1Model"
          },
          "invoicePayableId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "INIT", "CREATED", "IN_DRAFT", "APPROVAL_REQUESTED", "APPROVAL_PENDING", "APPROVED_ACCOUNTING_ENTRY_PENDING", "DECLINED", "READY_FOR_PAYMENT_RELEASE", "PENDING_PAYMENT_APPROVAL", "PAYMENT_PAUSED", "SCHEDULED", "PAYMENT_PENDING", "PARTIALLY_PAID", "PAID", "COMPLETED", "RESET_PENDING", "CANCELLATION_PENDING", "CANCELLED", "DUPLICATED" ]
          },
          "failureReason" : {
            "type" : "string",
            "enum" : [ "EMAIL_NOT_ALLOWED", "ERP_ENTRY_FAILED", "OCR_FAILED", "PAYMENT_APPROVAL_DECLINED", "PAYMENT_FAILED", "RESETTING_INVOICE_FAILED", "APPROVAL_SUBMISSION_FAILED", "USER_INPUT_VALIDATION_FAILED", "DUPLICATE_INVOICE", "PAYMENT_REJECTED" ]
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "warningContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "approvalNote" : {
            "type" : "string"
          },
          "cancellationReason" : {
            "type" : "string"
          },
          "payeeName" : {
            "type" : "string"
          },
          "payeeIban" : {
            "type" : "string"
          },
          "payeeBban" : {
            "type" : "string"
          },
          "payeeBic" : {
            "type" : "string"
          },
          "payeeBankCode" : {
            "type" : "string"
          },
          "payeeSwedishBankgiroNumber" : {
            "type" : "string"
          },
          "payeeCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "payeeAddress" : {
            "type" : "string"
          },
          "payeeZipcode" : {
            "type" : "string"
          },
          "payeeBankName" : {
            "type" : "string"
          },
          "payeeBankCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "payeeBankAddress" : {
            "type" : "string"
          },
          "payeeBankZipcode" : {
            "type" : "string"
          },
          "payeeCity" : {
            "type" : "string"
          },
          "payeeBankCity" : {
            "type" : "string"
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorDetailsOcr" : {
            "$ref" : "#/components/schemas/ExternalInvoicePayableVendorDetailsOcrV1Model"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceNumber" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "description" : {
            "type" : "string"
          },
          "senderBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "fiNumber" : {
            "type" : "string"
          },
          "norKidReference" : {
            "type" : "string"
          },
          "paymentAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ocrCompletedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canceledAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "issuedDate" : {
            "type" : "string",
            "format" : "date"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "invoiceCreatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "purchaseOrderId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "lineItemsIncludeTax" : {
            "type" : "boolean"
          },
          "localCurrencyFxRate" : {
            "type" : "number"
          },
          "groupCurrencyFxRate" : {
            "type" : "number"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalInvoicePayableLineItemV1Model"
            }
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          },
          "paymentPausedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "paymentPausedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "senderEmail" : {
            "type" : "string"
          },
          "documentName" : {
            "type" : "string"
          }
        }
      },
      "ExternalInvoicePayableVendorDetailsOcrV1Model" : {
        "type" : "object",
        "properties" : {
          "avatarUrl" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "website" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "city" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "bankAccountNumber" : {
            "type" : "string"
          },
          "bankAccountBic" : {
            "type" : "string"
          },
          "domesticBankAccountNumber" : {
            "type" : "string"
          },
          "domesticBankAccountCode" : {
            "type" : "string"
          },
          "vatId" : {
            "type" : "string"
          }
        }
      },
      "ExternalPropertyObjectValueV1Model" : {
        "type" : "object",
        "properties" : {
          "propertyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "value" : {
            "type" : "string"
          },
          "valueId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalReimbursementLineItemMetadataV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalInvoicePayableLineItemMetadataV1Model"
        }, {
          "type" : "object",
          "properties" : {
            "expenseId" : {
              "type" : "string",
              "format" : "uuid"
            },
            "reimbursementCategoryId" : {
              "type" : "string",
              "format" : "uuid"
            },
            "performedDate" : {
              "type" : "string",
              "format" : "date"
            },
            "originalAmount" : {
              "type" : "integer",
              "format" : "int64"
            },
            "originalCurrency" : {
              "type" : "string",
              "example" : "USD"
            }
          }
        } ]
      },
      "ExternalVendorInvoiceLineItemMetadataV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalInvoicePayableLineItemMetadataV1Model"
        } ]
      },
      "ExternalApproveInvoicePayableRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "note" : {
            "type" : "string"
          }
        }
      },
      "ExternalCreateInvoicePayableRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "processingMode" : {
            "type" : "string",
            "enum" : [ "DATA_ONLY", "OCR_AND_MERGE" ]
          }
        }
      },
      "ExternalInvoicePayableUploadUrlResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "uploadUrl" : {
            "type" : "string",
            "format" : "url"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ExternalUploadInvoicePayableDocumentRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "documentName" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          }
        }
      },
      "ExternalDeclineInvoicePayableRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "note" : {
            "type" : "string"
          }
        }
      },
      "ExternalInvoiceReceivableLineAmountDiscountV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalInvoiceReceivableLineDiscountV1Model"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "ExternalInvoiceReceivableLineDiscountV1Model" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "PERCENTAGE", "AMOUNT" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ExternalInvoiceReceivableLinePercentageDiscountV1Model" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalInvoiceReceivableLineDiscountV1Model"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number"
            }
          }
        } ]
      },
      "ExternalInvoiceReceivableLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceReceivableId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "productId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "quantity" : {
            "type" : "number"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "discount" : {
            "$ref" : "#/components/schemas/ExternalInvoiceReceivableLineDiscountV1Model"
          },
          "discountAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "netAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "taxAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "avataxCode" : {
            "type" : "string"
          },
          "billingStart" : {
            "type" : "string",
            "format" : "date"
          },
          "billingEnd" : {
            "type" : "string",
            "format" : "date"
          },
          "priceOverwrite" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productNameOverwrite" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "accrualTemplateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accrualStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "accrualEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalInvoiceReceivableV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "contractId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "paymentType" : {
            "type" : "string",
            "enum" : [ "BANK_TRANSFER", "STRIPE" ]
          },
          "payeeBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "customerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceTemplateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceTemplateAdditionalText" : {
            "type" : "string"
          },
          "invoiceNumber" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "ARCHIVED", "DRAFT", "OPEN_IN_PROGRESS", "OPEN", "PAYMENT_PENDING", "PARTIALLY_PAID", "PAID" ]
          },
          "openedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "netTerms" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poNumber" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "taxEngineName" : {
            "type" : "string",
            "enum" : [ "AVATAX", "LIGHT" ]
          },
          "areLinesWithTax" : {
            "type" : "boolean"
          },
          "localCurrencyFxRate" : {
            "type" : "number"
          },
          "groupCurrencyFxRate" : {
            "type" : "number"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalInvoiceReceivableLineV1Model"
            }
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/UiClientException"
          }
        }
      },
      "UiClientException" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "cause" : {
            "type" : "object",
            "properties" : {
              "cause" : {
                "type" : "object",
                "properties" : {
                  "stackTrace" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "classLoaderName" : {
                          "type" : "string"
                        },
                        "moduleName" : {
                          "type" : "string"
                        },
                        "moduleVersion" : {
                          "type" : "string"
                        },
                        "methodName" : {
                          "type" : "string"
                        },
                        "fileName" : {
                          "type" : "string"
                        },
                        "lineNumber" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "nativeMethod" : {
                          "type" : "boolean"
                        },
                        "className" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "message" : {
                    "type" : "string"
                  },
                  "localizedMessage" : {
                    "type" : "string"
                  }
                }
              },
              "stackTrace" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "classLoaderName" : {
                      "type" : "string"
                    },
                    "moduleName" : {
                      "type" : "string"
                    },
                    "moduleVersion" : {
                      "type" : "string"
                    },
                    "methodName" : {
                      "type" : "string"
                    },
                    "fileName" : {
                      "type" : "string"
                    },
                    "lineNumber" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "nativeMethod" : {
                      "type" : "boolean"
                    },
                    "className" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "message" : {
                "type" : "string"
              },
              "suppressed" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "stackTrace" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "classLoaderName" : {
                            "type" : "string"
                          },
                          "moduleName" : {
                            "type" : "string"
                          },
                          "moduleVersion" : {
                            "type" : "string"
                          },
                          "methodName" : {
                            "type" : "string"
                          },
                          "fileName" : {
                            "type" : "string"
                          },
                          "lineNumber" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "nativeMethod" : {
                            "type" : "boolean"
                          },
                          "className" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "message" : {
                      "type" : "string"
                    },
                    "localizedMessage" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "localizedMessage" : {
                "type" : "string"
              }
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BAD_REQUEST", "CONFLICT", "FORBIDDEN", "NOT_FOUND", "UNAUTHORIZED", "UNPROCESSABLE_CONTENT" ]
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UiClientExceptionError"
            }
          }
        }
      },
      "UiClientExceptionError" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "path" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "ExternalCreateInvoiceReceivableLineRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "quantity" : {
            "type" : "number"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "discount" : {
            "$ref" : "#/components/schemas/ExternalInvoiceReceivableLineDiscountV1Model"
          },
          "priceOverwrite" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productNameOverwrite" : {
            "type" : "string"
          },
          "avataxCode" : {
            "type" : "string"
          },
          "billingStart" : {
            "type" : "string",
            "format" : "date"
          },
          "billingEnd" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "ExternalCreateInvoiceReceivableRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "paymentType" : {
            "type" : "string",
            "enum" : [ "BANK_TRANSFER", "STRIPE" ]
          },
          "payeeBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date"
          },
          "customerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "invoiceTemplateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "netTerms" : {
            "type" : "integer",
            "format" : "int32"
          },
          "poNumber" : {
            "type" : "string"
          },
          "invoiceTemplateAdditionalText" : {
            "type" : "string"
          },
          "areLinesWithTax" : {
            "type" : "boolean"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCreateInvoiceReceivableLineRequestV1Model"
            }
          }
        }
      },
      "ExternalJournalEntryLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "journalEntryId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "netTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "grossTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "taxTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "description" : {
            "type" : "string"
          },
          "targetCompanyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerTaxId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "amortizationTemplateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amortizationStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "amortizationEndDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "ExternalJournalEntryV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentNumber" : {
            "type" : "string"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerName" : {
            "type" : "string",
            "enum" : [ "PRIMARY", "ELIMINATION" ]
          },
          "createdBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "updatedBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentSequenceId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "POSTED", "PARTIALLY_CLEARED", "CLEARED", "ARCHIVED" ]
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "postingDate" : {
            "type" : "string",
            "format" : "date"
          },
          "documentDate" : {
            "type" : "string",
            "format" : "date"
          },
          "valuationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "areLinesWithTax" : {
            "type" : "boolean"
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalJournalEntryLineV1Model"
            }
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          },
          "businessPartnerName" : {
            "type" : "string"
          },
          "businessPartnerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalNetTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "totalTaxTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "totalGrossTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "multiJournalEntryId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalCreateJournalEntryLineRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "netTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "grossTransactionAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "taxAmount" : {
            "$ref" : "#/components/schemas/DirectedAmount"
          },
          "description" : {
            "type" : "string"
          },
          "targetCompanyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerTaxId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amortizationTemplateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amortizationStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "amortizationEndDate" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "ExternalCreateJournalEntryRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerName" : {
            "type" : "string",
            "enum" : [ "PRIMARY", "ELIMINATION" ]
          },
          "documentNumber" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "postingDate" : {
            "type" : "string",
            "format" : "date"
          },
          "valuationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "documentDate" : {
            "type" : "string",
            "format" : "date"
          },
          "areLinesWithTax" : {
            "type" : "boolean"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCreateJournalEntryLineRequestV1Model"
            }
          },
          "businessPartnerName" : {
            "type" : "string"
          },
          "businessPartnerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "shouldPost" : {
            "type" : "boolean"
          }
        }
      },
      "ExternalLciCommandRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "threadId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalLedgerAccountV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalLedgerAccountV1Model"
            }
          }
        }
      },
      "ExternalLedgerAccountV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "bankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cardAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "cashAndEquivalentsAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BANK", "CARD", "CASH_AND_EQUIVALENTS", "ACCOUNTS_RECEIVABLE", "INVENTORY", "CORPORATE_TAX_RECEIVABLE", "OTHER_CURRENT_ASSET", "INTANGIBLE_NON_CURRENT_ASSET", "TANGIBLE_NON_CURRENT_ASSET", "FINANCIAL_NON_CURRENT_ASSET", "CORPORATE_TAX_DEFERRED_ASSET", "OTHER_NON_CURRENT_ASSET", "ACCOUNTS_PAYABLE", "OVERDRAFT_FACILITY", "CORPORATE_TAX_PAYABLE", "OTHER_CURRENT_LIABILITY", "LONG_TERM_LOAN", "CORPORATE_TAX_DEFERRED_LIABILITY", "OTHER_LONG_TERM_LIABILITY", "CONTRIBUTED_CAPITAL", "RETAINED_EARNINGS", "ACCUMULATED_OTHER_COMPREHENSIVE_INCOME", "OTHER_EQUITY", "COST_OF_SALES", "DISTRIBUTION_COST", "GENERAL_AND_ADMINISTRATIVE_EXPENSE", "PERSONNEL_COST", "OTHER_OPERATING_EXPENSE", "INCOME_TAX", "DEPRECIATION_AND_AMORTIZATION", "NON_OPERATING_EXPENSE", "INTEREST_EXPENSE", "EXCHANGE_RATE_LOSS_REALIZED", "EXCHANGE_RATE_LOSS_UNREALIZED", "OTHER_FINANCIAL_EXPENSE", "REVENUE", "DISCOUNT", "NON_OPERATING_INCOME", "INTEREST_INCOME", "EXCHANGE_RATE_GAIN_REALIZED", "EXCHANGE_RATE_GAIN_UNREALIZED", "OTHER_FINANCIAL_INCOME" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "DISABLED_EXTERNALLY", "DISABLED" ]
          },
          "context" : {
            "type" : "string"
          },
          "revaluateFxBalance" : {
            "type" : "boolean"
          },
          "companyEntities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCompanyEntityV1Model"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalGetLedgerTransactionLinesWithMaxAmountResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "maxTransactionAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalLedgerTransactionLineV1Model"
            }
          }
        }
      },
      "ExternalLedgerTransactionLineAmountsV1Model" : {
        "type" : "object",
        "properties" : {
          "dcSign" : {
            "type" : "string",
            "enum" : [ "D", "C" ]
          },
          "transactionAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionAmountInMajors" : {
            "type" : "number"
          },
          "signedTransactionAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "localAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "localAmountInMajors" : {
            "type" : "number"
          },
          "signedLocalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "localCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "groupAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "groupAmountInMajors" : {
            "type" : "number"
          },
          "signedGroupAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "groupCurrency" : {
            "type" : "string",
            "example" : "USD"
          },
          "debit" : {
            "type" : "boolean"
          },
          "credit" : {
            "type" : "boolean"
          }
        }
      },
      "ExternalLedgerTransactionLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerTransactionId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "transactionSequenceId" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityCode" : {
            "type" : "string"
          },
          "ledgerName" : {
            "type" : "string",
            "enum" : [ "PRIMARY", "ELIMINATION" ]
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "accountLabel" : {
            "type" : "string"
          },
          "accountType" : {
            "type" : "string",
            "enum" : [ "BANK", "CARD", "CASH_AND_EQUIVALENTS", "ACCOUNTS_RECEIVABLE", "INVENTORY", "CORPORATE_TAX_RECEIVABLE", "OTHER_CURRENT_ASSET", "INTANGIBLE_NON_CURRENT_ASSET", "TANGIBLE_NON_CURRENT_ASSET", "FINANCIAL_NON_CURRENT_ASSET", "CORPORATE_TAX_DEFERRED_ASSET", "OTHER_NON_CURRENT_ASSET", "ACCOUNTS_PAYABLE", "OVERDRAFT_FACILITY", "CORPORATE_TAX_PAYABLE", "OTHER_CURRENT_LIABILITY", "LONG_TERM_LOAN", "CORPORATE_TAX_DEFERRED_LIABILITY", "OTHER_LONG_TERM_LIABILITY", "CONTRIBUTED_CAPITAL", "RETAINED_EARNINGS", "ACCUMULATED_OTHER_COMPREHENSIVE_INCOME", "OTHER_EQUITY", "COST_OF_SALES", "DISTRIBUTION_COST", "GENERAL_AND_ADMINISTRATIVE_EXPENSE", "PERSONNEL_COST", "OTHER_OPERATING_EXPENSE", "INCOME_TAX", "DEPRECIATION_AND_AMORTIZATION", "NON_OPERATING_EXPENSE", "INTEREST_EXPENSE", "EXCHANGE_RATE_LOSS_REALIZED", "EXCHANGE_RATE_LOSS_UNREALIZED", "OTHER_FINANCIAL_EXPENSE", "REVENUE", "DISCOUNT", "NON_OPERATING_INCOME", "INTEREST_INCOME", "EXCHANGE_RATE_GAIN_REALIZED", "EXCHANGE_RATE_GAIN_UNREALIZED", "OTHER_FINANCIAL_INCOME" ]
          },
          "accountingDocumentLineId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "documentSequenceId" : {
            "type" : "string"
          },
          "accountingDocumentId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountingDocumentNumber" : {
            "type" : "string"
          },
          "documentType" : {
            "type" : "string",
            "enum" : [ "AP", "AR", "BP", "CC", "CN", "CT", "DE", "FX", "JE", "YC" ]
          },
          "postingDate" : {
            "type" : "string",
            "format" : "date"
          },
          "valuationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "description" : {
            "type" : "string"
          },
          "documentDescription" : {
            "type" : "string"
          },
          "amounts" : {
            "$ref" : "#/components/schemas/ExternalLedgerTransactionLineAmountsV1Model"
          },
          "taxId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxTagLabel" : {
            "type" : "string"
          },
          "taxCode" : {
            "type" : "string"
          },
          "businessPartnerName" : {
            "type" : "string"
          },
          "businessPartnerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accruedLedgerTransactionLineId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ledgerTransactionType" : {
            "type" : "string",
            "enum" : [ "DEFAULT", "AMORTIZATION", "FX", "BANK_CLEARING" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          },
          "amortized" : {
            "type" : "boolean"
          }
        }
      },
      "ExternalPurchaseOrderLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "purchaseOrderId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "quantity" : {
            "type" : "number"
          },
          "unitPrice" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "netAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalBatchUpdatePurchaseOrderLineRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "lineId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "quantity" : {
            "type" : "number"
          },
          "unitPrice" : {
            "type" : "integer",
            "format" : "int64"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalSetCustomPropertyRequestV1Model"
            }
          }
        }
      },
      "ExternalCreatePurchaseOrderLineRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "quantity" : {
            "type" : "number"
          },
          "unitPrice" : {
            "type" : "integer",
            "format" : "int64"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalSetCustomPropertyRequestV1Model"
            }
          }
        }
      },
      "ExternalPurchaseOrderV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "purchaseRequestId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "IN_DRAFT", "RESET_PENDING", "APPROVED_ACCOUNTING_ENTRY_PENDING", "OPEN", "CLOSE_PENDING", "CLOSED", "CANCEL_PENDING", "CANCELLED" ]
          },
          "totalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalNetAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTaxAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "erpNumber" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "ownerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorEmail" : {
            "type" : "string"
          },
          "deliveryAddress" : {
            "type" : "string"
          },
          "deliveryDate" : {
            "type" : "string",
            "format" : "date"
          },
          "documentKey" : {
            "type" : "string"
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "editStatus" : {
            "type" : "string",
            "enum" : [ "ALL_EDITS_ALLOWED", "ALL_EDITS_LOCKED" ]
          },
          "purchaseOrderDate" : {
            "type" : "string",
            "format" : "date"
          },
          "erpSyncedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lockedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cancelledAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalPurchaseOrderLineV1Model"
            }
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          }
        }
      },
      "ExternalCreatePurchaseOrderRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "vendorEmail" : {
            "type" : "string"
          },
          "purchaseOrderDate" : {
            "type" : "string",
            "format" : "date"
          },
          "deliveryAddress" : {
            "type" : "string"
          },
          "deliveryDate" : {
            "type" : "string",
            "format" : "date"
          },
          "description" : {
            "type" : "string"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCreatePurchaseOrderLineRequestV1Model"
            }
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalSetCustomPropertyRequestV1Model"
            }
          }
        }
      },
      "ExternalBffPurchaseOrderLineV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "purchaseOrderId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int64"
          },
          "unitPrice" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountLabel" : {
            "type" : "string"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "taxAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "netAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "taxCodeLabel" : {
            "type" : "string"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterName" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalBffPurchaseOrderV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "purchaseRequestId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "IN_DRAFT", "RESET_PENDING", "APPROVED_ACCOUNTING_ENTRY_PENDING", "OPEN", "CLOSE_PENDING", "CLOSED", "CANCEL_PENDING", "CANCELLED" ]
          },
          "erpNumber" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "totalAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalNetAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalTaxAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalMatchedAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ownerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownerName" : {
            "type" : "string"
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorEmail" : {
            "type" : "string"
          },
          "vendorName" : {
            "type" : "string"
          },
          "vendorAvatarUrl" : {
            "type" : "string"
          },
          "documentKey" : {
            "type" : "string"
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "purchaseOrderDate" : {
            "type" : "string",
            "format" : "date"
          },
          "deliveryAddress" : {
            "type" : "string"
          },
          "deliveryDate" : {
            "type" : "string",
            "format" : "date"
          },
          "erpSyncedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lockedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cancelledAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBffPurchaseOrderLineV1Model"
            }
          }
        }
      },
      "ExternalGetAllResponseV1ModelExternalBffPurchaseOrderV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBffPurchaseOrderV1Model"
            }
          }
        }
      },
      "ExternalUpdatePurchaseOrderRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalSetCustomPropertyRequestV1Model"
            }
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "purchaseOrderDate" : {
            "type" : "string",
            "format" : "date"
          },
          "vendorEmail" : {
            "type" : "string"
          },
          "deliveryAddress" : {
            "type" : "string"
          },
          "deliveryDate" : {
            "type" : "string",
            "format" : "date"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ExternalUpdatePurchaseOrderLineRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalSetCustomPropertyRequestV1Model"
            }
          },
          "description" : {
            "type" : "string"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "quantity" : {
            "type" : "number"
          },
          "unitPrice" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ExternalUserGroupV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "memberCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalUserV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "avatarUrl" : {
            "type" : "string"
          },
          "notificationChannel" : {
            "type" : "string",
            "enum" : [ "MS_TEAMS", "SLACK", "WEB_APP" ]
          },
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "city" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "DEACTIVATED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SUPERUSER", "REIMBURSEMENT", "CARDHOLDER", "CONTROLLER", "COMPANY_ADMIN", "VENDOR_MANAGEMENT", "INVOICE_APPROVER", "AP_PREPARATION", "AP_CLERK", "AR_CLERK" ]
            }
          },
          "groups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalUserGroupV1Model"
            }
          },
          "managerIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "GetExternalUsersResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalUserV1Model"
            }
          }
        }
      },
      "ExternalUserReimbursementConfigV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "defaultCostCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "bankCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "bankName" : {
            "type" : "string"
          },
          "bankCity" : {
            "type" : "string"
          },
          "bankAddress" : {
            "type" : "string"
          },
          "bankZipcode" : {
            "type" : "string"
          },
          "bankAccountNumber" : {
            "type" : "string"
          },
          "bankAccountBic" : {
            "type" : "string"
          },
          "domesticBankAccountNumber" : {
            "type" : "string"
          },
          "domesticBankAccountCode" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE" ]
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalUpdateUserRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "avatarUrl" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "city" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "notificationChannel" : {
            "type" : "string",
            "enum" : [ "MS_TEAMS", "SLACK", "WEB_APP" ]
          }
        }
      },
      "ExternalUpsertUserReimbursementConfigRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "bankCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "defaultCostCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "bankName" : {
            "type" : "string"
          },
          "bankCity" : {
            "type" : "string"
          },
          "bankAddress" : {
            "type" : "string"
          },
          "bankZipcode" : {
            "type" : "string"
          },
          "bankAccountNumber" : {
            "type" : "string"
          },
          "bankAccountBic" : {
            "type" : "string"
          },
          "domesticBankAccountNumber" : {
            "type" : "string"
          },
          "domesticBankAccountCode" : {
            "type" : "string"
          }
        }
      },
      "ExternalDefaultVendorCompanyEntityV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "senderBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalVendorApproverV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalVendorNoteV1Model" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "authorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "channel" : {
            "type" : "string",
            "enum" : [ "WEB_APP", "SLACK" ]
          },
          "content" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalVendorV1Model" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "EXTERNAL", "USER" ]
          },
          "vendorId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyEntityIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "defaultCompanyEntity" : {
            "$ref" : "#/components/schemas/ExternalDefaultVendorCompanyEntityV1Model"
          },
          "vatId" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "avatarUrl" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "website" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "city" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "bankName" : {
            "type" : "string"
          },
          "bankCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "bankCity" : {
            "type" : "string"
          },
          "bankAddress" : {
            "type" : "string"
          },
          "bankZipcode" : {
            "type" : "string"
          },
          "bankAccountNumber" : {
            "type" : "string"
          },
          "bankAccountBic" : {
            "type" : "string"
          },
          "domesticBankAccountNumber" : {
            "type" : "string"
          },
          "domesticBankAccountCode" : {
            "type" : "string"
          },
          "swedishBankgiroNumber" : {
            "type" : "string"
          },
          "vendorCreatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "approvers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalVendorApproverV1Model"
            }
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalVendorNoteV1Model"
            }
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          },
          "contractValue" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdBy" : {
            "type" : "string",
            "format" : "uuid"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_REVIEW", "ACTIVE", "FAILED" ]
          },
          "failureContext" : {
            "$ref" : "#/components/schemas/ClientException"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalCustomPropertyV1Model"
            }
          },
          "lastMtdSpendInGroupCurrency" : {
            "type" : "integer",
            "format" : "int64"
          },
          "groupCurrency" : {
            "type" : "string",
            "example" : "USD"
          }
        }
      },
      "ExternalCreateDefaultVendorCompanyEntityRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "senderBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalCreateVendorRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "defaultCompanyEntity" : {
            "$ref" : "#/components/schemas/ExternalCreateDefaultVendorCompanyEntityRequestV1Model"
          },
          "companyEntityIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "vatId" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "avatarUrl" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "website" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "city" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "bankName" : {
            "type" : "string"
          },
          "bankCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "bankCity" : {
            "type" : "string"
          },
          "bankAddress" : {
            "type" : "string"
          },
          "bankZipcode" : {
            "type" : "string"
          },
          "bankAccountNumber" : {
            "type" : "string"
          },
          "bankAccountBic" : {
            "type" : "string"
          },
          "domesticBankAccountNumber" : {
            "type" : "string"
          },
          "domesticBankAccountCode" : {
            "type" : "string"
          },
          "swedishBankgiroNumber" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string",
            "example" : "USD"
          }
        }
      },
      "GetExternalVendorsResponseV1Model" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalVendorV1Model"
            }
          }
        }
      },
      "ExternalUpdateDefaultVendorCompanyEntityRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "companyEntityId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "accountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "taxCodeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "costCenterId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "senderBankAccountId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "ExternalUpdateVendorRequestV1Model" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "defaultCompanyEntity" : {
            "$ref" : "#/components/schemas/ExternalUpdateDefaultVendorCompanyEntityRequestV1Model"
          },
          "companyEntityIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "vatId" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "avatarUrl" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "website" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "city" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "bankName" : {
            "type" : "string"
          },
          "bankCountry" : {
            "type" : "string",
            "enum" : [ "UNDEFINED", "AC", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AN", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BY", "BZ", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CP", "CR", "CS", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DG", "DJ", "DK", "DM", "DO", "DZ", "EA", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "EU", "EZ", "FI", "FJ", "FK", "FM", "FO", "FR", "FX", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "IC", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NT", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "RE", "RO", "RS", "RU", "RW", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SU", "SV", "SX", "SY", "SZ", "TA", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UK", "UM", "US", "UY", "UZ", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "XI", "XU", "XK", "YE", "YT", "YU", "ZA", "ZM", "ZR", "ZW" ]
          },
          "bankCity" : {
            "type" : "string"
          },
          "bankAddress" : {
            "type" : "string"
          },
          "bankZipcode" : {
            "type" : "string"
          },
          "bankAccountNumber" : {
            "type" : "string"
          },
          "bankAccountBic" : {
            "type" : "string"
          },
          "domesticBankAccountNumber" : {
            "type" : "string"
          },
          "domesticBankAccountCode" : {
            "type" : "string"
          },
          "swedishBankgiroNumber" : {
            "type" : "string"
          },
          "customProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SetCustomPropertyRequestV1Model"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "apiKeyAuth" : {
        "type" : "apiKey",
        "description" : "Basic authentication header of the form **Basic** **<api_key>**, where **<api_key>** is your api key.",
        "name" : "Authorization",
        "in" : "header"
      },
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}